server:
  port: 8089

spring:
  application:
    name: rococo-userdata
#    autoconfigure:
#      exclude:
#        - 'org.springframework.cloud.vault.config.VaultAutoConfiguration'
#        - 'org.springframework.cloud.vault.config.VaultObservationAutoConfiguration'
#        - 'org.springframework.cloud.vault.config.VaultReactiveAutoConfiguration'
  kafka:
    bootstrap-servers: '127.0.0.1:9092'
    consumer:
      group-id: 'userdata'
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.use.type.headers: false
#        spring.json.value.default.type: rococo.backends.users.dto.UserJson

  datasource:
    url: 'jdbc:postgresql://127.0.0.1:5432/rococo-users'
    username: postgres
    password: secret

    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 10000
      max-lifetime: 1000
      auto-commit: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    schemas: public
    locations: classpath:db/migration/rococo-userdata
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    generate-ddl: false
    open-in-view: false

logging:
  file:
    path: ./logs/rococo-userdata
  level:
    root: INFO
    org.springframework.kafka: INFO
    org.springframework.web: INFO
    org.springframework.ws: INFO
    org.springframework.boot.autoconfigure: INFO

rococo-userdata:
  base-uri: 'http://127.0.0.1:8089'

---
server:
  port: 8089

spring:
  config:
    activate:
      on-profile: 'docker'
  application:
    name: rococo-userdata
  kafka:
    bootstrap-servers: 'kafka:9092'
    consumer:
      group-id: 'userdata'
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

  datasource:
    url: 'jdbc:postgresql://rococo-db:5432/rococo-users'
    username: postgres
    password: secret

    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 10000
      max-lifetime: 1000
      auto-commit: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    schemas: public
    locations: classpath:db/migration/rococo-userdata
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    generate-ddl: false
    open-in-view: false

logging:
  file:
    path: ./logs/rococo-userdata
  level:
    root: INFO
    org.springframework.kafka: INFO
    org.springframework.web: INFO
    org.springframework.ws: INFO
    org.springframework.boot.autoconfigure: INFO

rococo-userdata:
  base-uri: 'http://userdata:8089'